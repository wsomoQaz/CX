-- Roblox UI 库 (简单实现)
local UILib = {}

-- 基础创建函数
function UILib:createElement(className, props, parent)
    local obj = Instance.new(className)
    for k, v in pairs(props or {}) do
        obj[k] = v
    end
    if parent then
        obj.Parent = parent
    end
    return obj
end

-- 创建窗口 (顶层容器)
function UILib:Window(title)
    local ScreenGui = self:createElement("ScreenGui", {Name="CustomUI"}, game.Players.LocalPlayer:WaitForChild("PlayerGui"))
    local Frame = self:createElement("Frame", {
        Size = UDim2.new(0, 300, 0, 400),
        Position = UDim2.new(0.3, 0, 0.3, 0),
        BackgroundColor3 = Color3.fromRGB(40,40,40),
        BorderSizePixel = 0
    }, ScreenGui)

    local Title = self:createElement("TextLabel", {
        Text = title,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = Color3.fromRGB(25,25,25),
        TextColor3 = Color3.fromRGB(255,255,255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 20
    }, Frame)

    return Frame
end

-- 按钮
function UILib:Button(parent, text, callback)
    local button = self:createElement("TextButton", {
        Text = text,
        Size = UDim2.new(1, -20, 0, 40),
        BackgroundColor3 = Color3.fromRGB(60,60,60),
        TextColor3 = Color3.fromRGB(255,255,255),
        Font = Enum.Font.SourceSans,
        TextSize = 18
    }, parent)
    button.MouseButton1Click:Connect(callback or function() end)
    return button
end

-- 开关
function UILib:Toggle(parent, text, default, callback)
    local toggle = self:createElement("TextButton", {
        Text = text .. ": " .. (default and "ON" or "OFF"),
        Size = UDim2.new(1, -20, 0, 40),
        BackgroundColor3 = Color3.fromRGB(80,80,80),
        TextColor3 = Color3.fromRGB(255,255,255),
    }, parent)

    local state = default or false
    toggle.MouseButton1Click:Connect(function()
        state = not state
        toggle.Text = text .. ": " .. (state and "ON" or "OFF")
        if callback then callback(state) end
    end)
    return toggle
end

-- 滑块 (简化版)
function UILib:Slider(parent, text, min, max, default, callback)
    local sliderFrame = self:createElement("Frame", {
        Size = UDim2.new(1, -20, 0, 50),
        BackgroundColor3 = Color3.fromRGB(50,50,50),
    }, parent)

    self:createElement("TextLabel", {
        Text = text .. " ["..default.."]",
        Size = UDim2.new(1,0,0,20),
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255,255,255),
        Font = Enum.Font.SourceSans,
        TextSize = 16
    }, sliderFrame)

    local slider = self:createElement("TextButton", {
        Text = "滑块 (假装可拖动)",
        Size = UDim2.new(1,0,0,25),
        Position = UDim2.new(0,0,0,20),
        BackgroundColor3 = Color3.fromRGB(100,100,100),
        TextColor3 = Color3.fromRGB(255,255,255),
    }, sliderFrame)

    slider.MouseButton1Click:Connect(function()
        local value = math.random(min,max) -- 这里用随机数模拟
        sliderFrame.TextLabel.Text = text .. " ["..value.."]"
        if callback then callback(value) end
    end)
end

-- 下拉菜单
function UILib:Dropdown(parent, text, options, callback)
    local dropdown = self:createElement("TextButton", {
        Text = text.." ▼",
        Size = UDim2.new(1, -20, 0, 40),
        BackgroundColor3 = Color3.fromRGB(70,70,70),
        TextColor3 = Color3.fromRGB(255,255,255),
    }, parent)

    dropdown.MouseButton1Click:Connect(function()
        for _, opt in ipairs(options) do
            local item = self:createElement("TextButton", {
                Text = opt,
                Size = UDim2.new(1, -20, 0, 30),
                BackgroundColor3 = Color3.fromRGB(90,90,90),
                TextColor3 = Color3.fromRGB(255,255,255),
            }, parent)
            item.MouseButton1Click:Connect(function()
                dropdown.Text = text..": "..opt
                if callback then callback(opt) end
                item:Destroy()
            end)
        end
    end)
end

return UILib